#Properties starting with org.marc4j are appended to the System properties for use in by the marc4j library 
#org.marc4j.marc.MarcFactory=classname to use instead of default org.marc4j.marc.MarcFactory  
# for example to use this custom class to cope with records that might multiple 001 fields
#
#org.marc4j.marc.MarcFactory=org.solrmarc.marcoverride.UVAMarcFactoryImpl

# set to true to allow upper case subfield codes (which are illegal in Marc21 records) defaults to false
# org.marc4j.MarcPermissiveStreamReader.upperCaseSubfields={false,true}
org.marc4j.MarcPermissiveStreamReader.upperCaseSubfields = true

#properties starting marc.  control the MarcReader that is constructed for SolrMarc
# whether to convert the record to UTF-8 (this should always be true.)
# note that if the record already is in UTF-8 or if it is not a binary MARC record
# (for instance a MARCXML or MARCinJSON record)  the property has no effect.
marc.to_utf_8 = true

# whether to use the permissive, error correcting record reader (this should always be true.)
# note that if the record is not a binary MARC record (for instance a MARCXML or 
# MARCinJSON record)  the property has no effect.
marc.permissive = true

# The expected default character encoding to be found in the records in the file being read
# the most common values are "MARC8", "UTF8", "BESTGUESS",  others are possible
# note if you specify MARC8 and the records actually are already in UTF-8 the record field data 
# will not be changed. 
marc.default_encoding = MARC8

# Whether accented characters should be normalized to composed form "C" or decomposed form "D" 
# or be left unchanged. (any other value) 
marc.unicode_normalize = false

# Whether consecutive records should be merged into a single record.  The first property lists the fields
# in subsequent records that should be copied to the combined record.  THe other two properties list the 
# fields that are used to decide whether the records match.  If they are not specified the 001 field value 
# is used from both records to determine the match.
#marc.combine_records = 999
#marc.combine_records.left_field = 001
#marc.combine_records.right_field = 001

# Can be used to filter the records that are indexed.  Values are like:  "856u"  or "245h/videorecording"
# The first property specifies to include a record if a matching field is present. The second on specifies
# to include a record only if no fields match the pattern.
#marc.include_if_present
#marc.include_if_missing

# Can be used to modify records "on-the-fly" as they are being read in.  The first property lists fields 
# fields (like "970") that should be entirely deleted, or field/subfield combos (like "999o") If more than
# one should be deleted, they should be listed one after another separated by the colon character 
# The second property lists the name of a property file that contains a definition of more detailed, complicated
# edits to be performed on the MARC record.  The format of this file is not yet documented anywhere. 
#marc.delete_subfields = 999o:099:541:561:583:588:910:911:923:930:945:949:955:970:980:981:982:984:985:990:993
#marc.reader.remap = easyproxy_url_map.properties



# whether errors that are found in the MARC records should be included in the generated SolrDocuments 
marc.include_errors = true


